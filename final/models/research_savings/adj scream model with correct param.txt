   1: def keras_fmin_fnct(space):
   2: 
   3:     model = models.Sequential()
   4:     model.add(Dense(32, activation='relu', input_shape=(X_train.shape[1],)))
   5:     choices=four
   6:     if choices == 'two':
   7:         model.add(Dense(128, activation='relu'))
   8:     elif choices == 'three':
   9:         model.add(Dense(128, activation='relu'))
  10:         model.add(Dense(512, activation='relu'))
  11:     elif choices == 'four':
  12:         model.add(Dense(128, activation='relu'))
  13:         model.add(Dense(256, activation='relu'))
  14:         model.add(Dense(32, activation='relu'))
  15:     elif choices == 'five':
  16:         model.add(Dense(64, activation='relu'))
  17:         model.add(Dense(1024, activation='relu'))
  18:         model.add(Dense(32, activation='relu'))
  19:         model.add(Dense(512, activation='relu'))
  20:     model.add(layers.Dense(1, activation='sigmoid'))  # the 1 means binary classification
  21:     model.compile(optimizer='adam'
  22:                   , loss='binary_crossentropy'
  23:                   , metrics=['accuracy'])
  24:     model.fit(X_train, Y_train,
  25:               batch_size=128,
  26:               nb_epoch=20,
  27:               verbose=2,
  28:               validation_data=(X_test, Y_test))
  29:     score, acc = model.evaluate(X_test, Y_test, verbose=0)
  30:     print('Test accuracy:', acc)
  31:     return {'loss': -acc, 'status': STATUS_OK, 'model': model}
  32: 